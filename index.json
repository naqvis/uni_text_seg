{"repository_name":"textseg","body":"# Unicode Text Segmentation\n\nShard `TextSegment` implements Unicode Text Segmentation according to [Unicode Standard Annex #29](http://unicode.org/reports/tr29/) (Unicode version 13.0.0)\nto determine the grapheme cluster boundaries of unicode text.\n\nIn Crystal, `String` class provides a `codepoints` method to return Unicode code points. However, multiple code points may be combined into one user-perceived character or what the Unicode specification calls **grapheme cluster**. Here are some examples:\n\n|String|Bytes (UTF-8)|Code points |Grapheme clusters|\n|-|-|-|-|\n|KaÃàse|6 bytes: `4b 61 cc 88 73 65`|5 code points: `4b 61 308 73 65`|4 clusters: `[4b],[61 308],[73],[65]`|\n|üßô‚Äç‚ôÇÔ∏èüíà|17 bytes: `f0 9f a7 99 e2 80 8d e2 99 82 ef b8 8f f0 9f 92 88`|5 code points: `1f9d9 200d 2642 fe0f 1f488`|2 cluster: `[1f9d9 200d 2642 fe0f],[1f488]`|\n|üáµüá∞|8 bytes: `f0 9f 87 b5 f0 9f 87 b0`|2 code points: `1f1f5 1f1f0`|1 cluster: `[1f1f5 1f1f0]`|\n\nThis shard provides a tool to iterate over these grapheme clusters. This may be used to determine the number of user-perceived characters, to split strings in their intended places, or to extract individual characters which form a unit.\n\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     textseg:\n       github: naqvis/uni_text_seg\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"textseg\"\n\nTextSegment.each_grapheme(\"üîÆüëçüèº!\") do |cluster|\n  pp cluster.codepoints\n  pp cluster.positions\n  pp cluster.str\n  pp cluster.bytes\nend\n```\n\n## Development\n\nTo run all tests:\n\n```\ncrystal spec\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/naqvis/uni_text_seg/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Ali Naqvi](https://github.com/naqvis) - creator and maintainer\n","program":{"html_id":"textseg/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"textseg","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"textseg/TextSegment","path":"TextSegment.html","kind":"module","full_name":"TextSegment","name":"TextSegment","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/textseg.cr","line_number":3,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/textseg.cr#L3"}],"repository_name":"textseg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.2\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Shard `TextSegment` implements Unicode Text Segmentation according to [Unicode Standard Annex #29](http://unicode.org/reports/tr29/) (Unicode version 12.0.0)\nto determine the grapheme cluster boundaries of unicode text.","summary":"<p>Shard <code><a href=\"TextSegment.html\">TextSegment</a></code> implements Unicode Text Segmentation according to <a href=\"http://unicode.org/reports/tr29/\">Unicode Standard Annex #29</a> (Unicode version 12.0.0) to determine the grapheme cluster boundaries of unicode text.</p>","class_methods":[{"html_id":"each_grapheme(str:String,&:Grapheme::Cluster->Nil):Nil-class-method","name":"each_grapheme","doc":"Yields each Unicode extended grapheme cluster in the string to the block.\n\n```\nTextSegment.each_grapheme(\"üßô‚Äç‚ôÇÔ∏èüíà\") do |cluster|\n  p! cluster.codepoints\n  p! cluster.to_s\nend\n```","summary":"<p>Yields each Unicode extended grapheme cluster in the string to the block.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String, & : Grapheme::Cluster -> Nil) : Nil","args_html":"(str : String, & : <a href=\"TextSegment/Grapheme/Cluster.html\">Grapheme::Cluster</a> -> Nil) : Nil","location":{"filename":"src/textseg.cr","line_number":25,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/textseg.cr#L25"},"def":{"name":"each_grapheme","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(Grapheme::Cluster -> Nil)"},"return_type":"Nil","visibility":"Public","body":"(Grapheme::Graphemes.new(str)).each do |cluster|\n  yield cluster\nend"}},{"html_id":"each_grapheme(str:String):Grapheme::Graphemes-class-method","name":"each_grapheme","doc":"returns graphemes cluster iterator over Unicode extended grapheme clusters.\n```\nTextSegment.each_grapheme(\"üîÆüëçüèº!\").each do |cluster|\n  pp cluster.codepoints\n  pp cluster.positions\n  pp cluster.str\n  pp cluster.bytes\nend\n```","summary":"<p>returns graphemes cluster iterator over Unicode extended grapheme clusters.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String) : Grapheme::Graphemes","args_html":"(str : String) : <a href=\"TextSegment/Grapheme/Graphemes.html\">Grapheme::Graphemes</a>","location":{"filename":"src/textseg.cr","line_number":40,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/textseg.cr#L40"},"def":{"name":"each_grapheme","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Grapheme::Graphemes","visibility":"Public","body":"Grapheme::Graphemes.new(str)"}},{"html_id":"graphemes(str:String):Array(Grapheme::Cluster)-class-method","name":"graphemes","doc":"returns an array of all Unicode extended grapheme clusters, specified in the Unicode Standard Annex #29. Grapheme clusters correspond to\n\"user-perceived characters\". These characters often consist of multiple code points (e.g. the \"woman kissing woman\" emoji consists of 8 code points:\nwoman + ZWJ + heavy black heart (2 code points) + ZWJ + kiss mark + ZWJ + woman) and the rules described in Annex #29 must be applied to group those\ncode points into clusters perceived by the user as one character.\n```\nTextSegment.graphemes(\"üßô‚Äç‚ôÇÔ∏èüíà\") # => [TextSegment::Grapheme::Cluster(@codepoints=[129497, 8205, 9794, 65039], @positions={0, 13}), TextSegment::Grapheme::Cluster(@codepoints=[128136], @positions={13, 17})]\n```","summary":"<p>returns an array of all Unicode extended grapheme clusters, specified in the Unicode Standard Annex #29.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String) : Array(Grapheme::Cluster)","args_html":"(str : String) : Array(<a href=\"TextSegment/Grapheme/Cluster.html\">Grapheme::Cluster</a>)","location":{"filename":"src/textseg.cr","line_number":13,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/textseg.cr#L13"},"def":{"name":"graphemes","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Grapheme::Cluster)","visibility":"Public","body":"(Grapheme::Graphemes.new(str)).to_a"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"textseg/TextSegment/Grapheme","path":"TextSegment/Grapheme.html","kind":"module","full_name":"TextSegment::Grapheme","name":"Grapheme","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/grapheme/grapheme.cr","line_number":1,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L1"},{"filename":"src/grapheme/properties.cr","line_number":7,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/properties.cr#L7"}],"repository_name":"textseg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"textseg/TextSegment","kind":"module","full_name":"TextSegment","name":"TextSegment"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"textseg/TextSegment/Grapheme/Cluster","path":"TextSegment/Grapheme/Cluster.html","kind":"struct","full_name":"TextSegment::Grapheme::Cluster","name":"Cluster","abstract":false,"superclass":{"html_id":"textseg/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"textseg/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"textseg/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"textseg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/grapheme/grapheme.cr","line_number":3,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L3"}],"repository_name":"textseg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"textseg/TextSegment/Grapheme","kind":"module","full_name":"TextSegment::Grapheme","name":"Grapheme"},"doc":"Unicode extended grapheme cluster. `Graphemes` Iterator will return an instance of this struct to return information about specific grapheme cluster.","summary":"<p>Unicode extended grapheme cluster.</p>","class_methods":[],"constructors":[],"instance_methods":[{"html_id":"bytes-instance-method","name":"bytes","doc":"returns a byte slice which corresponds to the current grapheme cluster.","summary":"<p>returns a byte slice which corresponds to the current grapheme cluster.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/grapheme/grapheme.cr","line_number":23,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L23"},"def":{"name":"bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"str.to_slice"}},{"html_id":"codepoints:Array(Int32)-instance-method","name":"codepoints","doc":"Returns codepoints which corresponds to the current grapheme cluster.","summary":"<p>Returns codepoints which corresponds to the current grapheme cluster.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/grapheme/grapheme.cr","line_number":5,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L5"},"def":{"name":"codepoints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@codepoints"}},{"html_id":"positions:Tuple(Int32,Int32)-instance-method","name":"positions","doc":"returns the interval of the current grapheme as byte positions into the\noriginal string. The first returned value \"from\" indexes the first byte\nand the second retured value \"to\" indexes the first byte that is not included\nanumore, i.e. `str[from...to]` is the current grapheme cluster of\nthe original string \"str\".","summary":"<p>returns the interval of the current grapheme as byte positions into the original string.</p>","abstract":false,"args":[],"args_string":" : Tuple(Int32, Int32)","args_html":" : Tuple(Int32, Int32)","location":{"filename":"src/grapheme/grapheme.cr","line_number":11,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L11"},"def":{"name":"positions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, Int32)","visibility":"Public","body":"@positions"}},{"html_id":"str-instance-method","name":"str","doc":"returns a substring of the original string which corresponds to the current grapheme cluster","summary":"<p>returns a substring of the original string which corresponds to the current grapheme cluster</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/grapheme/grapheme.cr","line_number":18,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L18"},"def":{"name":"str","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@codepoints.map(&.chr).join"}}],"macros":[],"types":[]},{"html_id":"textseg/TextSegment/Grapheme/Graphemes","path":"TextSegment/Grapheme/Graphemes.html","kind":"struct","full_name":"TextSegment::Grapheme::Graphemes","name":"Graphemes","abstract":false,"superclass":{"html_id":"textseg/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"textseg/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"textseg/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"textseg/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"textseg/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"textseg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/grapheme/grapheme.cr","line_number":35,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L35"}],"repository_name":"textseg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"textseg/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"textseg/TextSegment/Grapheme","kind":"module","full_name":"TextSegment::Grapheme","name":"Grapheme"},"doc":"Graphemes implements an iterator over Unicode extended grapheme clusters,\nspecified in the Unicode Standard Annex #29. Grapheme clusters correspond to\n\"user-perceived characters\". These characters often consist of multiple\ncode points (e.g. the \"woman kissing woman\" emoji consists of 8 code points:\nwoman + ZWJ + heavy black heart (2 code points) + ZWJ + kiss mark + ZWJ +\nwoman) and the rules described in Annex #29 must be applied to group those\ncode points into clusters perceived by the user as one character.","summary":"<p>Graphemes implements an iterator over Unicode extended grapheme clusters, specified in the Unicode Standard Annex #29.</p>","class_methods":[],"constructors":[{"html_id":"new(str:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","args_html":"(str : String)","location":{"filename":"src/grapheme/grapheme.cr","line_number":38,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L38"},"def":{"name":"new","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(str)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/grapheme/grapheme.cr","line_number":53,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L53"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if move_next\nelse\n  return stop\nend\nCluster.new(@codepoints[@start...@end], {@indices[@start], @indices[@end]})\n"}},{"html_id":"reset:Nil-instance-method","name":"reset","doc":"Reset puts the iterator into its initial state such that the next call to\n`next()` sets it to the first grapheme cluster again.","summary":"<p>Reset puts the iterator into its initial state such that the next call to <code><a href=\"../../TextSegment/Grapheme/Graphemes.html#next-instance-method\">#next()</a></code> sets it to the first grapheme cluster again.</p>","abstract":false,"args":[],"args_string":" : Nil","args_html":" : Nil","location":{"filename":"src/grapheme/grapheme.cr","line_number":60,"url":"https://github.com/naqvis/uni_text_seg/blob/0de51d9665aa6c68ed851eae4654ee681314c6e5/src/grapheme/grapheme.cr#L60"},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@start, @end, @pos, @state = 0, 0, 0, State::Any\nmove_next\n"}}],"macros":[],"types":[]}]}]}]}}